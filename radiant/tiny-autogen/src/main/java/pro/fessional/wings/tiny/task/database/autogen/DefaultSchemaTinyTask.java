/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.tiny.task.database.autogen;


import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;
import pro.fessional.wings.tiny.task.database.autogen.tables.WinTaskDefineTable;
import pro.fessional.wings.tiny.task.database.autogen.tables.WinTaskResultTable;

import javax.annotation.processing.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * The schema <code>wings</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.7",
        "schema version:2020102701"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefaultSchemaTinyTask extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>DEFAULT_SCHEMA</code>
     */
    public static final DefaultSchemaTinyTask DEFAULT_SCHEMA = new DefaultSchemaTinyTask();

    /**
     * The table <code>win_task_define</code>.
     */
    public final WinTaskDefineTable WinTaskDefine = WinTaskDefineTable.WinTaskDefine;

    /**
     * The table <code>win_task_result</code>.
     */
    public final WinTaskResultTable WinTaskResult = WinTaskResultTable.WinTaskResult;

    /**
     * No further instances allowed
     */
    private DefaultSchemaTinyTask() {
        super("", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalogTinyTask.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            WinTaskDefineTable.WinTaskDefine,
            WinTaskResultTable.WinTaskResult
        );
    }
}
