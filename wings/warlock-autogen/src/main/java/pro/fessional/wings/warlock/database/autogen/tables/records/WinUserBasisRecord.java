/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.warlock.database.autogen.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;
import pro.fessional.wings.warlock.database.autogen.tables.WinUserBasisTable;
import pro.fessional.wings.warlock.database.autogen.tables.interfaces.IWinUserBasis;
import pro.fessional.wings.warlock.database.autogen.tables.pojos.WinUserBasis;
import pro.fessional.wings.warlock.enums.autogen.UserGender;
import pro.fessional.wings.warlock.enums.autogen.UserStatus;

import javax.annotation.processing.Generated;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Locale;


/**
 * The table <code>wings.win_user_basis</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7",
        "schema version:2020102701"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class WinUserBasisRecord extends UpdatableRecordImpl<WinUserBasisRecord> implements Record13<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, String, String, UserGender, String, Locale, ZoneId, String, UserStatus>, IWinUserBasis {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>win_user_basis.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>win_user_basis.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>win_user_basis.create_dt</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>win_user_basis.create_dt</code>.
     */
    @Override
    public LocalDateTime getCreateDt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>win_user_basis.modify_dt</code>.
     */
    @Override
    public void setModifyDt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>win_user_basis.modify_dt</code>.
     */
    @Override
    public LocalDateTime getModifyDt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>win_user_basis.delete_dt</code>.
     */
    @Override
    public void setDeleteDt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>win_user_basis.delete_dt</code>.
     */
    @Override
    public LocalDateTime getDeleteDt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>win_user_basis.commit_id</code>.
     */
    @Override
    public void setCommitId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>win_user_basis.commit_id</code>.
     */
    @Override
    public Long getCommitId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>win_user_basis.nickname</code>.
     */
    @Override
    public void setNickname(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>win_user_basis.nickname</code>.
     */
    @Override
    public String getNickname() {
        return (String) get(5);
    }

    /**
     * Setter for <code>win_user_basis.passsalt</code>.
     */
    @Override
    public void setPasssalt(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>win_user_basis.passsalt</code>.
     */
    @Override
    public String getPasssalt() {
        return (String) get(6);
    }

    /**
     * Setter for <code>win_user_basis.gender</code>.
     */
    @Override
    public void setGender(UserGender value) {
        set(7, value);
    }

    /**
     * Getter for <code>win_user_basis.gender</code>.
     */
    @Override
    public UserGender getGender() {
        return (UserGender) get(7);
    }

    /**
     * Setter for <code>win_user_basis.avatar</code>.
     */
    @Override
    public void setAvatar(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>win_user_basis.avatar</code>.
     */
    @Override
    public String getAvatar() {
        return (String) get(8);
    }

    /**
     * Setter for <code>win_user_basis.locale</code>.
     */
    @Override
    public void setLocale(Locale value) {
        set(9, value);
    }

    /**
     * Getter for <code>win_user_basis.locale</code>.
     */
    @Override
    public Locale getLocale() {
        return (Locale) get(9);
    }

    /**
     * Setter for <code>win_user_basis.zoneid</code>.
     */
    @Override
    public void setZoneid(ZoneId value) {
        set(10, value);
    }

    /**
     * Getter for <code>win_user_basis.zoneid</code>.
     */
    @Override
    public ZoneId getZoneid() {
        return (ZoneId) get(10);
    }

    /**
     * Setter for <code>win_user_basis.remark</code>.
     */
    @Override
    public void setRemark(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>win_user_basis.remark</code>.
     */
    @Override
    public String getRemark() {
        return (String) get(11);
    }

    /**
     * Setter for <code>win_user_basis.status</code>.
     */
    @Override
    public void setStatus(UserStatus value) {
        set(12, value);
    }

    /**
     * Getter for <code>win_user_basis.status</code>.
     */
    @Override
    public UserStatus getStatus() {
        return (UserStatus) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, String, String, UserGender, String, Locale, ZoneId, String, UserStatus> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, LocalDateTime, LocalDateTime, LocalDateTime, Long, String, String, UserGender, String, Locale, ZoneId, String, UserStatus> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return WinUserBasisTable.WinUserBasis.Id;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return WinUserBasisTable.WinUserBasis.CreateDt;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return WinUserBasisTable.WinUserBasis.ModifyDt;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return WinUserBasisTable.WinUserBasis.DeleteDt;
    }

    @Override
    public Field<Long> field5() {
        return WinUserBasisTable.WinUserBasis.CommitId;
    }

    @Override
    public Field<String> field6() {
        return WinUserBasisTable.WinUserBasis.Nickname;
    }

    @Override
    public Field<String> field7() {
        return WinUserBasisTable.WinUserBasis.Passsalt;
    }

    @Override
    public Field<UserGender> field8() {
        return WinUserBasisTable.WinUserBasis.Gender;
    }

    @Override
    public Field<String> field9() {
        return WinUserBasisTable.WinUserBasis.Avatar;
    }

    @Override
    public Field<Locale> field10() {
        return WinUserBasisTable.WinUserBasis.Locale;
    }

    @Override
    public Field<ZoneId> field11() {
        return WinUserBasisTable.WinUserBasis.Zoneid;
    }

    @Override
    public Field<String> field12() {
        return WinUserBasisTable.WinUserBasis.Remark;
    }

    @Override
    public Field<UserStatus> field13() {
        return WinUserBasisTable.WinUserBasis.Status;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreateDt();
    }

    @Override
    public LocalDateTime component3() {
        return getModifyDt();
    }

    @Override
    public LocalDateTime component4() {
        return getDeleteDt();
    }

    @Override
    public Long component5() {
        return getCommitId();
    }

    @Override
    public String component6() {
        return getNickname();
    }

    @Override
    public String component7() {
        return getPasssalt();
    }

    @Override
    public UserGender component8() {
        return getGender();
    }

    @Override
    public String component9() {
        return getAvatar();
    }

    @Override
    public Locale component10() {
        return getLocale();
    }

    @Override
    public ZoneId component11() {
        return getZoneid();
    }

    @Override
    public String component12() {
        return getRemark();
    }

    @Override
    public UserStatus component13() {
        return getStatus();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreateDt();
    }

    @Override
    public LocalDateTime value3() {
        return getModifyDt();
    }

    @Override
    public LocalDateTime value4() {
        return getDeleteDt();
    }

    @Override
    public Long value5() {
        return getCommitId();
    }

    @Override
    public String value6() {
        return getNickname();
    }

    @Override
    public String value7() {
        return getPasssalt();
    }

    @Override
    public UserGender value8() {
        return getGender();
    }

    @Override
    public String value9() {
        return getAvatar();
    }

    @Override
    public Locale value10() {
        return getLocale();
    }

    @Override
    public ZoneId value11() {
        return getZoneid();
    }

    @Override
    public String value12() {
        return getRemark();
    }

    @Override
    public UserStatus value13() {
        return getStatus();
    }

    @Override
    public WinUserBasisRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value2(LocalDateTime value) {
        setCreateDt(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value3(LocalDateTime value) {
        setModifyDt(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value4(LocalDateTime value) {
        setDeleteDt(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value5(Long value) {
        setCommitId(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value6(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value7(String value) {
        setPasssalt(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value8(UserGender value) {
        setGender(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value9(String value) {
        setAvatar(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value10(Locale value) {
        setLocale(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value11(ZoneId value) {
        setZoneid(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value12(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public WinUserBasisRecord value13(UserStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public WinUserBasisRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, Long value5, String value6, String value7, UserGender value8, String value9, Locale value10, ZoneId value11, String value12, UserStatus value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinUserBasis from) {
        setId(from.getId());
        setCreateDt(from.getCreateDt());
        setModifyDt(from.getModifyDt());
        setDeleteDt(from.getDeleteDt());
        setCommitId(from.getCommitId());
        setNickname(from.getNickname());
        setPasssalt(from.getPasssalt());
        setGender(from.getGender());
        setAvatar(from.getAvatar());
        setLocale(from.getLocale());
        setZoneid(from.getZoneid());
        setRemark(from.getRemark());
        setStatus(from.getStatus());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IWinUserBasis> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WinUserBasisRecord
     */
    public WinUserBasisRecord() {
        super(WinUserBasisTable.WinUserBasis);
    }

    /**
     * Create a detached, initialised WinUserBasisRecord
     */
    public WinUserBasisRecord(Long id, LocalDateTime createDt, LocalDateTime modifyDt, LocalDateTime deleteDt, Long commitId, String nickname, String passsalt, UserGender gender, String avatar, Locale locale, ZoneId zoneid, String remark, UserStatus status) {
        super(WinUserBasisTable.WinUserBasis);

        setId(id);
        setCreateDt(createDt);
        setModifyDt(modifyDt);
        setDeleteDt(deleteDt);
        setCommitId(commitId);
        setNickname(nickname);
        setPasssalt(passsalt);
        setGender(gender);
        setAvatar(avatar);
        setLocale(locale);
        setZoneid(zoneid);
        setRemark(remark);
        setStatus(status);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised WinUserBasisRecord
     */
    public WinUserBasisRecord(WinUserBasis value) {
        super(WinUserBasisTable.WinUserBasis);

        if (value != null) {
            setId(value.getId());
            setCreateDt(value.getCreateDt());
            setModifyDt(value.getModifyDt());
            setDeleteDt(value.getDeleteDt());
            setCommitId(value.getCommitId());
            setNickname(value.getNickname());
            setPasssalt(value.getPasssalt());
            setGender(value.getGender());
            setAvatar(value.getAvatar());
            setLocale(value.getLocale());
            setZoneid(value.getZoneid());
            setRemark(value.getRemark());
            setStatus(value.getStatus());
            resetChangedOnNotNull();
        }
    }
}
