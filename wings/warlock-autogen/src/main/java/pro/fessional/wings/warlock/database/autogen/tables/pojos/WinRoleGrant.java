/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.warlock.database.autogen.tables.pojos;


import pro.fessional.wings.warlock.database.autogen.tables.interfaces.IWinRoleGrant;
import pro.fessional.wings.warlock.enums.autogen.GrantType;

import javax.annotation.processing.Generated;
import java.time.LocalDateTime;


/**
 * The table <code>wings.win_role_grant</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7",
        "schema version:2020102701"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class WinRoleGrant implements IWinRoleGrant {

    private static final long serialVersionUID = 1L;

    private Long referRole;
    private GrantType grantType;
    private Long grantEntry;
    private LocalDateTime createDt;
    private Long commitId;

    public WinRoleGrant() {}

    public WinRoleGrant(IWinRoleGrant value) {
        this.referRole = value.getReferRole();
        this.grantType = value.getGrantType();
        this.grantEntry = value.getGrantEntry();
        this.createDt = value.getCreateDt();
        this.commitId = value.getCommitId();
    }

    public WinRoleGrant(
        Long referRole,
        GrantType grantType,
        Long grantEntry,
        LocalDateTime createDt,
        Long commitId
    ) {
        this.referRole = referRole;
        this.grantType = grantType;
        this.grantEntry = grantEntry;
        this.createDt = createDt;
        this.commitId = commitId;
    }

    /**
     * Getter for <code>win_role_grant.refer_role</code>.
     */
    @Override
    public Long getReferRole() {
        return this.referRole;
    }

    /**
     * Setter for <code>win_role_grant.refer_role</code>.
     */
    @Override
    public void setReferRole(Long referRole) {
        this.referRole = referRole;
    }

    /**
     * Getter for <code>win_role_grant.grant_type</code>.
     */
    @Override
    public GrantType getGrantType() {
        return this.grantType;
    }

    /**
     * Setter for <code>win_role_grant.grant_type</code>.
     */
    @Override
    public void setGrantType(GrantType grantType) {
        this.grantType = grantType;
    }

    /**
     * Getter for <code>win_role_grant.grant_entry</code>.
     */
    @Override
    public Long getGrantEntry() {
        return this.grantEntry;
    }

    /**
     * Setter for <code>win_role_grant.grant_entry</code>.
     */
    @Override
    public void setGrantEntry(Long grantEntry) {
        this.grantEntry = grantEntry;
    }

    /**
     * Getter for <code>win_role_grant.create_dt</code>.
     */
    @Override
    public LocalDateTime getCreateDt() {
        return this.createDt;
    }

    /**
     * Setter for <code>win_role_grant.create_dt</code>.
     */
    @Override
    public void setCreateDt(LocalDateTime createDt) {
        this.createDt = createDt;
    }

    /**
     * Getter for <code>win_role_grant.commit_id</code>.
     */
    @Override
    public Long getCommitId() {
        return this.commitId;
    }

    /**
     * Setter for <code>win_role_grant.commit_id</code>.
     */
    @Override
    public void setCommitId(Long commitId) {
        this.commitId = commitId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final WinRoleGrant other = (WinRoleGrant) obj;
        if (this.referRole == null) {
            if (other.referRole != null)
                return false;
        }
        else if (!this.referRole.equals(other.referRole))
            return false;
        if (this.grantType == null) {
            if (other.grantType != null)
                return false;
        }
        else if (!this.grantType.equals(other.grantType))
            return false;
        if (this.grantEntry == null) {
            if (other.grantEntry != null)
                return false;
        }
        else if (!this.grantEntry.equals(other.grantEntry))
            return false;
        if (this.createDt == null) {
            if (other.createDt != null)
                return false;
        }
        else if (!this.createDt.equals(other.createDt))
            return false;
        if (this.commitId == null) {
            if (other.commitId != null)
                return false;
        }
        else if (!this.commitId.equals(other.commitId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.referRole == null) ? 0 : this.referRole.hashCode());
        result = prime * result + ((this.grantType == null) ? 0 : this.grantType.hashCode());
        result = prime * result + ((this.grantEntry == null) ? 0 : this.grantEntry.hashCode());
        result = prime * result + ((this.createDt == null) ? 0 : this.createDt.hashCode());
        result = prime * result + ((this.commitId == null) ? 0 : this.commitId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WinRoleGrant (");

        sb.append(referRole);
        sb.append(", ").append(grantType);
        sb.append(", ").append(grantEntry);
        sb.append(", ").append(createDt);
        sb.append(", ").append(commitId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinRoleGrant from) {
        setReferRole(from.getReferRole());
        setGrantType(from.getGrantType());
        setGrantEntry(from.getGrantEntry());
        setCreateDt(from.getCreateDt());
        setCommitId(from.getCommitId());
    }

    @Override
    public <E extends IWinRoleGrant> E into(E into) {
        into.from(this);
        return into;
    }
}
