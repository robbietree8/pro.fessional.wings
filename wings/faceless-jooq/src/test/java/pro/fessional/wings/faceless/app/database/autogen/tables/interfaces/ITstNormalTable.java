/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.faceless.app.database.autogen.tables.interfaces;


import pro.fessional.wings.faceless.enums.autogen.StandardLanguage;
import pro.fessional.wings.faceless.service.journal.JournalAware;

import javax.annotation.processing.Generated;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;


/**
 * The table <code>wings.tst_normal_table</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7",
        "schema version:2020102701"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public interface ITstNormalTable extends JournalAware, Serializable {

    /**
     * Setter for <code>tst_normal_table.id</code>.
     */
    public void setId(Long value);

    /**
     * Getter for <code>tst_normal_table.id</code>.
     */
    public Long getId();

    /**
     * Setter for <code>tst_normal_table.create_dt</code>.
     */
    public void setCreateDt(LocalDateTime value);

    /**
     * Getter for <code>tst_normal_table.create_dt</code>.
     */
    public LocalDateTime getCreateDt();

    /**
     * Setter for <code>tst_normal_table.modify_dt</code>.
     */
    public void setModifyDt(LocalDateTime value);

    /**
     * Getter for <code>tst_normal_table.modify_dt</code>.
     */
    public LocalDateTime getModifyDt();

    /**
     * Setter for <code>tst_normal_table.delete_dt</code>.
     */
    public void setDeleteDt(LocalDateTime value);

    /**
     * Getter for <code>tst_normal_table.delete_dt</code>.
     */
    public LocalDateTime getDeleteDt();

    /**
     * Setter for <code>tst_normal_table.commit_id</code>.
     */
    public void setCommitId(Long value);

    /**
     * Getter for <code>tst_normal_table.commit_id</code>.
     */
    public Long getCommitId();

    /**
     * Setter for <code>tst_normal_table.value_varchar</code>.
     */
    public void setValueVarchar(String value);

    /**
     * Getter for <code>tst_normal_table.value_varchar</code>.
     */
    public String getValueVarchar();

    /**
     * Setter for <code>tst_normal_table.value_decimal</code>.
     */
    public void setValueDecimal(BigDecimal value);

    /**
     * Getter for <code>tst_normal_table.value_decimal</code>.
     */
    public BigDecimal getValueDecimal();

    /**
     * Setter for <code>tst_normal_table.value_boolean</code>.
     */
    public void setValueBoolean(Boolean value);

    /**
     * Getter for <code>tst_normal_table.value_boolean</code>.
     */
    public Boolean getValueBoolean();

    /**
     * Setter for <code>tst_normal_table.value_int</code>.
     */
    public void setValueInt(Integer value);

    /**
     * Getter for <code>tst_normal_table.value_int</code>.
     */
    public Integer getValueInt();

    /**
     * Setter for <code>tst_normal_table.value_long</code>.
     */
    public void setValueLong(Long value);

    /**
     * Getter for <code>tst_normal_table.value_long</code>.
     */
    public Long getValueLong();

    /**
     * Setter for <code>tst_normal_table.value_date</code>.
     */
    public void setValueDate(LocalDate value);

    /**
     * Getter for <code>tst_normal_table.value_date</code>.
     */
    public LocalDate getValueDate();

    /**
     * Setter for <code>tst_normal_table.value_time</code>.
     */
    public void setValueTime(LocalTime value);

    /**
     * Getter for <code>tst_normal_table.value_time</code>.
     */
    public LocalTime getValueTime();

    /**
     * Setter for <code>tst_normal_table.value_lang</code>.
     */
    public void setValueLang(StandardLanguage value);

    /**
     * Getter for <code>tst_normal_table.value_lang</code>.
     */
    public StandardLanguage getValueLang();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface ITstNormalTable
     */
    public void from(ITstNormalTable from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface ITstNormalTable
     */
    public <E extends ITstNormalTable> E into(E into);
}
