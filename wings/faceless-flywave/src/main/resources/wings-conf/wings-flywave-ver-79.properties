## table name of schema version.
wings.faceless.flywave.ver.schema-version-table=sys_schema_version
## table name of journal.
wings.faceless.flywave.ver.schema-journal-table=sys_schema_journal

## RegExp is treated as drop statements for dangerous confirm.
wings.faceless.flywave.ver.drop-reg[drop-table]=^drop\\s+table
wings.faceless.flywave.ver.drop-reg[truncate-table]=^truncate\\s+table

## set version and journal table for Flywave.
## * `{{PLAIN_NAME}}` The `plain` table name of the target table
## * `{{TABLE_NAME}}` Target table name, can be plain, shard, trace table
## * `{{TABLE_BONE}}` Target table field (at least name, type, comments), without indexes and constraints
## * `{{TABLE_PKEY}}` The field name in PK of the target table, used to create a normal index copy from the original PK

## Trace table for AfterInsert (create the original PK index), `String`
wings.faceless.flywave.ver.journal-insert=\
CREATE TABLE `{{TABLE_NAME}}__` ( \n\
    `_id` BIGINT(20) NOT NULL AUTO_INCREMENT, \n\
    `_dt` DATETIME(3) NOT NULL DEFAULT '1000-01-01 00:00:00', \n\
    `_tp` CHAR(1) NOT NULL DEFAULT 'Z', \n\
    {{TABLE_BONE}}, \n\
    PRIMARY KEY (`_id`), \n\
    KEY `RAW_TABLE_PK` ({{TABLE_PKEY}}) \n\
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4

## AfterInsert Trigger, `String`
wings.faceless.flywave.ver.trigger-insert=\
CREATE TRIGGER `ai__{{TABLE_NAME}}` AFTER INSERT ON `{{TABLE_NAME}}` \n\
FOR EACH ROW BEGIN \n\
  IF (@DISABLE_FLYWAVE IS NULL) THEN  \n\
    INSERT INTO `{{TABLE_NAME}}__` SELECT NULL, NOW(3), 'C', t.* FROM `{{TABLE_NAME}}` t \n\
    WHERE t.id = NEW.id ; \n\
  END IF;  \n\
END

## Trace table for AfterUpdate (create the original PK index), `String`
wings.faceless.flywave.ver.journal-update=\
CREATE TABLE `{{TABLE_NAME}}__` ( \n\
    `_id` BIGINT(20) NOT NULL AUTO_INCREMENT, \n\
    `_dt` DATETIME(3) NOT NULL DEFAULT '1000-01-01 00:00:00', \n\
    `_tp` CHAR(1) NOT NULL DEFAULT 'Z', \n\
    {{TABLE_BONE}}, \n\
    PRIMARY KEY (`_id`), \n\
    KEY `RAW_TABLE_PK` ({{TABLE_PKEY}}) \n\
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4

## AfterUpdate Trigger, `String`
wings.faceless.flywave.ver.trigger-update=\
CREATE TRIGGER `au__{{TABLE_NAME}}` AFTER UPDATE ON `{{TABLE_NAME}}` \n\
FOR EACH ROW BEGIN \n\
  IF (@DISABLE_FLYWAVE IS NULL) THEN  \n\
    INSERT INTO `{{TABLE_NAME}}__` SELECT NULL, NOW(3), 'U', t.* FROM `{{TABLE_NAME}}` t \n\
    WHERE t.id = NEW.id ; \n\
  END IF;  \n\
END

## Trace table for BeforeDelete (create the original PK index),`String`
wings.faceless.flywave.ver.journal-delete=\
CREATE TABLE `{{TABLE_NAME}}__` ( \n\
    `_id` BIGINT(20) NOT NULL AUTO_INCREMENT, \n\
    `_dt` DATETIME(3) NOT NULL DEFAULT '1000-01-01 00:00:00', \n\
    `_tp` CHAR(1) NOT NULL DEFAULT 'Z', \n\
    {{TABLE_BONE}}, \n\
    PRIMARY KEY (`_id`), \n\
    KEY `RAW_TABLE_PK` ({{TABLE_PKEY}}) \n\
) ENGINE=INNODB DEFAULT CHARSET=UTF8MB4

## BeforeDelete Trigger, `String`
wings.faceless.flywave.ver.trigger-delete=\
CREATE TRIGGER `bd__{{TABLE_NAME}}` BEFORE DELETE ON `{{TABLE_NAME}}` \n\
FOR EACH ROW BEGIN \n\
  IF (@DISABLE_FLYWAVE IS NULL) THEN  \n\
    INSERT INTO `{{TABLE_NAME}}__` SELECT NULL, NOW(3), 'D', t.* FROM `{{TABLE_NAME}}` t \n\
    WHERE t.id = OLD.id ; \n\
  END IF;  \n\
END

