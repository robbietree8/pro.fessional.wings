######### dependency override #########
spring.wings.faceless.enabled.enumi18n=true
spring.wings.enabled.pro.fessional.wings.faceless.spring.conf.FlywaveAutoConfiguration=true
##############################

## whether to enable auto config.
spring.wings.warlock.enabled.autoconf=true

## whether to support "warlock security web and http".
spring.wings.warlock.enabled.security-auto=true

## whether to enable Web auto config, eg. firewall, debug, etc.
spring.wings.warlock.enabled.security-web-autos=true

## whether to support "warlock security http wing bind".
spring.wings.warlock.enabled.security-http-bind=true

## whether to support "warlock security http wing auth".
spring.wings.warlock.enabled.security-http-auth=true

## whether to support "warlock security http base auth".
spring.wings.warlock.enabled.security-http-base=true

## whether to support "warlock security http auto".
spring.wings.warlock.enabled.security-http-auto=true

## whether to support SecurityFilterChain.
spring.wings.warlock.enabled.security-http-chain=true

## whether to support warlock security Bean.
spring.wings.warlock.enabled.security-bean=true

## whether to inject jooq dao.
spring.wings.warlock.enabled.jooq-autogen=true

## whether to inject ListAllLoginPageCombo.
spring.wings.warlock.enabled.combo-list-all-login-page=true

## whether to inject NonceUserDetailsCombo.
spring.wings.warlock.enabled.combo-nonce-user-details=true

## whether to support just auth.
spring.wings.warlock.enabled.just-auth=true

## whether to inject JustAuthLoginPageCombo.
spring.wings.warlock.enabled.combo-just-auth-login-page=true

## whether to inject JustAuthUserDetailsCombo.
spring.wings.warlock.enabled.combo-just-auth-user-details=true

## whether to inject JustAuthUserAuthnAutoReg.
spring.wings.warlock.enabled.combo-just-auth-autoreg=true

## whether to support AuthZonePermChecker.
spring.wings.warlock.enabled.zone-perm-check=false

## whether to support AuthAppPermChecker.
spring.wings.warlock.enabled.app-perm-check=true

## whether to inject DefaultExceptionResolver.
spring.wings.warlock.enabled.default-exception-handler=true

## whether to inject BindExceptionAdvice.
spring.wings.warlock.enabled.bind-exception-advice=true

## whether to check mysql and local timezone compatibility.
spring.wings.warlock.enabled.check-database=true

## whether to support global inject AlternateTypeRule into Docket.
spring.wings.warlock.enabled.swagger-rule=true

## whether to support global inject "java.time.Local*" into Docket.
spring.wings.warlock.enabled.swagger-jsr310=true

## whether to enable table CUD listener.
spring.wings.warlock.enabled.table-change=true

## whether to enable the default auth Controller.
spring.wings.warlock.enabled.controller-auth=true

## whether to enable document-only login/out proc that processed by filter.
spring.wings.warlock.enabled.controller-proc=true

## whether to enable the default user Controller.
spring.wings.warlock.enabled.controller-user=true

## whether to enable the default mock Controller.
spring.wings.warlock.enabled.controller-mock=true

## whether to enable the default test Controller.
spring.wings.warlock.enabled.controller-test=true

## whether to enable the default TweakController.
spring.wings.warlock.enabled.controller-tweak=false

## whether to enable the default OauthController.
spring.wings.warlock.enabled.controller-oauth=true

## whether to enable timing watching and analysis.
spring.wings.warlock.enabled.watching=false

## whether to support wings union login.
spring.wings.warlock.enabled.uniauth=false
