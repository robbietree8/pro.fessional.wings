/*
 * This file is generated by jOOQ.
 */
package pro.fessional.wings.warlock.database.autogen.tables.pojos;


import pro.fessional.wings.warlock.database.autogen.tables.interfaces.IWinUserLogin;

import javax.annotation.processing.Generated;
import java.time.LocalDateTime;


/**
 * The table <code>wings.win_user_login</code>.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.7",
        "schema version:2020102701"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class WinUserLogin implements IWinUserLogin {

    private static final long serialVersionUID = 1L;

    private Long id;
    private Long userId;
    private String authType;
    private String loginIp;
    private LocalDateTime loginDt;
    private String terminal;
    private String details;
    private Boolean failed;

    public WinUserLogin() {}

    public WinUserLogin(IWinUserLogin value) {
        this.id = value.getId();
        this.userId = value.getUserId();
        this.authType = value.getAuthType();
        this.loginIp = value.getLoginIp();
        this.loginDt = value.getLoginDt();
        this.terminal = value.getTerminal();
        this.details = value.getDetails();
        this.failed = value.getFailed();
    }

    public WinUserLogin(
        Long id,
        Long userId,
        String authType,
        String loginIp,
        LocalDateTime loginDt,
        String terminal,
        String details,
        Boolean failed
    ) {
        this.id = id;
        this.userId = userId;
        this.authType = authType;
        this.loginIp = loginIp;
        this.loginDt = loginDt;
        this.terminal = terminal;
        this.details = details;
        this.failed = failed;
    }

    /**
     * Getter for <code>win_user_login.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>win_user_login.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>win_user_login.user_id</code>.
     */
    @Override
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>win_user_login.user_id</code>.
     */
    @Override
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>win_user_login.auth_type</code>.
     */
    @Override
    public String getAuthType() {
        return this.authType;
    }

    /**
     * Setter for <code>win_user_login.auth_type</code>.
     */
    @Override
    public void setAuthType(String authType) {
        this.authType = authType;
    }

    /**
     * Getter for <code>win_user_login.login_ip</code>.
     */
    @Override
    public String getLoginIp() {
        return this.loginIp;
    }

    /**
     * Setter for <code>win_user_login.login_ip</code>.
     */
    @Override
    public void setLoginIp(String loginIp) {
        this.loginIp = loginIp;
    }

    /**
     * Getter for <code>win_user_login.login_dt</code>.
     */
    @Override
    public LocalDateTime getLoginDt() {
        return this.loginDt;
    }

    /**
     * Setter for <code>win_user_login.login_dt</code>.
     */
    @Override
    public void setLoginDt(LocalDateTime loginDt) {
        this.loginDt = loginDt;
    }

    /**
     * Getter for <code>win_user_login.terminal</code>.
     */
    @Override
    public String getTerminal() {
        return this.terminal;
    }

    /**
     * Setter for <code>win_user_login.terminal</code>.
     */
    @Override
    public void setTerminal(String terminal) {
        this.terminal = terminal;
    }

    /**
     * Getter for <code>win_user_login.details</code>.
     */
    @Override
    public String getDetails() {
        return this.details;
    }

    /**
     * Setter for <code>win_user_login.details</code>.
     */
    @Override
    public void setDetails(String details) {
        this.details = details;
    }

    /**
     * Getter for <code>win_user_login.failed</code>.
     */
    @Override
    public Boolean getFailed() {
        return this.failed;
    }

    /**
     * Setter for <code>win_user_login.failed</code>.
     */
    @Override
    public void setFailed(Boolean failed) {
        this.failed = failed;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final WinUserLogin other = (WinUserLogin) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.authType == null) {
            if (other.authType != null)
                return false;
        }
        else if (!this.authType.equals(other.authType))
            return false;
        if (this.loginIp == null) {
            if (other.loginIp != null)
                return false;
        }
        else if (!this.loginIp.equals(other.loginIp))
            return false;
        if (this.loginDt == null) {
            if (other.loginDt != null)
                return false;
        }
        else if (!this.loginDt.equals(other.loginDt))
            return false;
        if (this.terminal == null) {
            if (other.terminal != null)
                return false;
        }
        else if (!this.terminal.equals(other.terminal))
            return false;
        if (this.details == null) {
            if (other.details != null)
                return false;
        }
        else if (!this.details.equals(other.details))
            return false;
        if (this.failed == null) {
            if (other.failed != null)
                return false;
        }
        else if (!this.failed.equals(other.failed))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.authType == null) ? 0 : this.authType.hashCode());
        result = prime * result + ((this.loginIp == null) ? 0 : this.loginIp.hashCode());
        result = prime * result + ((this.loginDt == null) ? 0 : this.loginDt.hashCode());
        result = prime * result + ((this.terminal == null) ? 0 : this.terminal.hashCode());
        result = prime * result + ((this.details == null) ? 0 : this.details.hashCode());
        result = prime * result + ((this.failed == null) ? 0 : this.failed.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("WinUserLogin (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(authType);
        sb.append(", ").append(loginIp);
        sb.append(", ").append(loginDt);
        sb.append(", ").append(terminal);
        sb.append(", ").append(details);
        sb.append(", ").append(failed);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IWinUserLogin from) {
        setId(from.getId());
        setUserId(from.getUserId());
        setAuthType(from.getAuthType());
        setLoginIp(from.getLoginIp());
        setLoginDt(from.getLoginDt());
        setTerminal(from.getTerminal());
        setDetails(from.getDetails());
        setFailed(from.getFailed());
    }

    @Override
    public <E extends IWinUserLogin> E into(E into) {
        into.from(this);
        return into;
    }
}
