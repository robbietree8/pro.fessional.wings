## The setting for the distributed PK- lightid.
## default transaction is Propagation.REQUIRES_NEW

## If the current ID of name and block does not exist, insert new one or throw an exception.
wings.faceless.lightid.insert.auto=true
## The first value when auto-insert, recommended to start with 1000, as the  value below is used manually.
wings.faceless.lightid.insert.next=1000
## The step value when auto-insert.
wings.faceless.lightid.insert.step=100

## timeout millis of loading.
wings.faceless.lightid.provider.timeout=5000
## max error count of loading.
wings.faceless.lightid.provider.max-error=5
## max id count of per loading.
wings.faceless.lightid.provider.max-count=10000
## no attempt in number of millis if error exists.
wings.faceless.lightid.provider.err-alive=120000

## method to provide blockId
## - `sql` - query database, return the id
## - `fix` - fixed number, int
## - `biz` - use a custom business bean
wings.faceless.lightid.provider.block-type=sql

## parameters of the provide method, select for sql, and number for fix.
wings.faceless.lightid.provider.block-para=SELECT block_id FROM sys_light_sequence WHERE seq_name = 'singleton_lightid_blockid'

## See `LightSequenceModifyJdbc` for details, the parameters are,
## - `String` seq_name - sequence name
## - `int` block_id - data block id
## - `long` next_val - next seq
## - `int` step_val - step value
## - `String` comments - description
## insert statement for JdbcTemplate.
wings.faceless.lightid.provider.sequence-insert=INSERT INTO sys_light_sequence (seq_name, block_id, next_val, step_val, comments) VALUES (?,?,?,?,?)
## update statement for JdbcTemplate.
wings.faceless.lightid.provider.sequence-update=UPDATE sys_light_sequence SET next_val=? WHERE block_id=? AND seq_name=? AND next_val=?
## fetch one sql for JdbcTemplate.
wings.faceless.lightid.provider.sequence-get-one=SELECT next_val, step_val FROM sys_light_sequence WHERE block_id=? AND seq_name=? FOR UPDATE
## fetch all sql for JdbcTemplate.
wings.faceless.lightid.provider.sequence-get-all=SELECT seq_name, next_val, step_val FROM sys_light_sequence WHERE block_id=? FOR UPDATE
## try to verify and adjust the id in the database to make it correct. Set to `empty` to ignore this feature.
## Enter `table name` (as sequence name), return `table name` and `column name` in the database.
wings.faceless.lightid.provider.sequence-adjust=SELECT table_name, column_name FROM INFORMATION_SCHEMA.COLUMNS WHERE table_schema = SCHEMA() AND UPPER(column_key) = 'PRI' AND UPPER(column_type) like '%INT%' AND table_name = ?

## the LightId monotonic increasing type, jvm|db|hz
## - jvm, monotonic in the jvm
## - db, monotonic in the database
## - hz, monotonic in the hazelcast
wings.faceless.lightid.provider.monotonic=jvm

## the number of block bytes, in the range [3,23], empty by default. LightId is 9 by default, so 2^9=512 zones.
wings.faceless.lightid.layout.block-bits=

## sequence layout, whether Block precedes Sequence, empty by default. LightId is true by default
wings.faceless.lightid.layout.block-first=

