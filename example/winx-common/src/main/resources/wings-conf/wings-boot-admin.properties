## Mail is not monitored by default in case the application fails to start
management.health.mail.enabled=false
management.metrics.tags.application=wings-winx

spring.boot.admin.monitor.status-interval=30000

## https://codecentric.github.io/spring-boot-admin/current/#spring-boot-admin-client
spring.boot.admin.client.enabled=true
spring.boot.admin.client.url=http://localhost:8093

## client can register at the protected server api
spring.boot.admin.client.username=boot-admin-server
spring.boot.admin.client.password=${DING_TALK_TOKEN:!!!YOU_MUST_USE_STRONG_PASSWORD_HERE!!!}

## server can access the protected client endpoints
spring.boot.admin.client.instance.metadata.user.name=boot-admin-client
spring.boot.admin.client.instance.metadata.user.password=${spring.boot.admin.client.password}

spring.boot.admin.client.instance.metadata.tags.environment=${os.name}

wings.warlock.security.mem-user[boot-admin-server].user-id=78
wings.warlock.security.mem-user[boot-admin-server].username=${spring.boot.admin.client.username}
wings.warlock.security.mem-user[boot-admin-server].password={basic}${spring.boot.admin.client.password}

wings.warlock.security.mem-user[boot-admin-client].user-id=79
wings.warlock.security.mem-user[boot-admin-client].username=${spring.boot.admin.client.instance.metadata.user.name}
wings.warlock.security.mem-user[boot-admin-client].password={basic}${spring.boot.admin.client.instance.metadata.user.password}

## Memory user permissions, key is auth info, overwrite if duplicated, recommend to use type and purpose.
wings.warlock.security.mem-auth[boot-admin-client].user-id=79
wings.warlock.security.mem-auth[boot-admin-client].auth-perm=ROLE_ACTUATOR
